# Quickstart:

## Build:

### Dependencies

- [cap'n proto](https://capnproto.org/)
- [go](https://golang.org/)
- [python <= 2.7](https://www.python.org/)

### Build steps

- server side:
    - clone this repo: `git clone https://github.mv.usa.alcatel.com/corentih/tgen`
    - make [go-capnproto2](https://github.com/zombiezen/go-capnproto2/) available in your `$GOPATH`: `go get github.com/zombiezen/go-capnproto2/`
    - run `make go`. A `tgen` binary should be built. Look at the help with `./tgen -h`
- python client:
    - create a virtual environment and activate it
    - run `make py`. A `tar.gz` package should be built under `client/dist/tgenpy<version>.tar.gz`.
    - install the package with `pip install client/dist/tgenpy<version>.tar.gz`.

## Usage:

```python

import tgenpy

# connect to the server
controller = tgenpy.Controller('localhost', '1234')

# create a new stream with 1000 ethernet frames:
stream = tgenpy.Stream()
ethernet = tgenpy.protocols.Ethernet2())
stream.layers.append(ethernet)
stream.count = 1000

# save the stream
controller.save_stream(stream)

# fetch the ports, find the loopback interface, and send the stream over it:
for port in controller.fetch_ports():
    if port.name == 'lo':
        port.send(stream.id)
```
